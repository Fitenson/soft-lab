import{u as n}from"./useRequest-DAGxQ583.js";import{B as o}from"./BaseEntity-DGhPHkWu.js";import{U as p}from"./UserViewModel-CyUmostW.js";class d extends o{_UUID;_username;_fullName;_email;_title;_profileImage;_description;_address;_gender;_phoneNo;_valid;_createdAtFormat;_createdByName;_updatedAtFormat;_updatedByName;constructor(e){super(e),this._UUID=e.UUID??"",this._username=e.username??"",this._fullName=e.fullName??"",this._email=e.email??"",this._title=e.title??"",this._profileImage=e.profileImage??"",this._description=e.description??"",this._address=e.address??"",this._gender=e.gender??"",this._phoneNo=e.phoneNo??"",this._valid=e.valid??!0,this._createdAtFormat=e.createdAtFormat??"",this._createdByName=e.createdByName??"",this._updatedAtFormat=e.updatedAtFormat??"",this._updatedByName=e.updatedByName??""}asViewModel(){return new p(this.asDto())}get UUID(){return this._UUID}set UUID(e){this._UUID=e}get username(){return this._username}set username(e){this._username=e}get fullName(){return this._fullName}set fullName(e){this._fullName=e}get email(){return this._email}set email(e){this._email=e}get title(){return this._title}set title(e){this._title=e}get profileImage(){return this._profileImage}set profileImage(e){this._profileImage=e}get description(){return this._description}set description(e){this._description=e}get address(){return this._address}set address(e){this._address=e}get gender(){return this._gender}set gender(e){this._gender=e}get phoneNo(){return this._phoneNo}set phoneNo(e){this._phoneNo=e}get valid(){return this._valid}set valid(e){this._valid=e}get createdAtFormat(){return this._createdAtFormat}set createdAtFormat(e){this._createdAtFormat=e}get createdByName(){return this._createdByName}set createdByName(e){this._createdByName=e}get updatedAtFormat(){return this._updatedAtFormat}set updatedAtFormat(e){this._updatedAtFormat=e}get updatedByName(){return this._updatedByName}set updatedByName(e){this._updatedByName=e}}const u=()=>{const{request:a}=n();return{index:async s=>{const t=new FormData;return t.append("param[offset]",s.offset),t.append("param[limit]",s.limit),t.append("param[sort]",s.sort),t.append("param[order]",s.order),await a({url:"/user/index",method:"POST",data:t})},create:async s=>{const t=s.asDto(),r=new FormData;r.append("user[username]",t.username??""),r.append("user[fullName]",t.fullName??""),r.append("user[email]",t.email??""),r.append("user[title]",t.title??""),r.append("user[description]",t.description??""),r.append("user[address]",t.address??""),r.append("user[gender]",t.gender??""),r.append("user[phoneNo]",t.phoneNo??""),r.append("user[valid]",t.valid?"1":"0");const i=await a({url:"/user/create",method:"POST",data:r});return new d(i)},update:async s=>{const t=s.asDto(),r=new FormData;r.append("user[username]",t.username??""),r.append("user[fullName]",t.fullName??""),r.append("user[email]",t.email??""),r.append("user[title]",t.title??""),r.append("user[description]",t.description??""),r.append("user[address]",t.address??""),r.append("user[gender]",t.gender??""),r.append("user[phoneNo]",t.phoneNo??""),r.append("user[valid]",t.valid?"1":"0");const i=await a({url:`/user/update?id=${t.UUID}`,method:"POST",data:r});return new d(i)}}},N=Object.freeze(Object.defineProperty({__proto__:null,default:u},Symbol.toStringTag,{value:"Module"}));export{d as U,N as a,u};
