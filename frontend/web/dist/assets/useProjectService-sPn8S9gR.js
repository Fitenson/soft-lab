import{u as P}from"./useRequest-ete3uOra.js";import{a7 as y}from"./main-BD-uWNuX.js";import{B as l}from"./BaseEntity-DGhPHkWu.js";import{P as j}from"./ProjectViewModel-CzJ36bb_.js";import{h as n}from"./serviceHandler-BlQljMi1.js";const w=["UUID","projectName","projectCode","description","secondDescription","moreDescription","valid"];function u(s,e){return y(s,w,e,"project")}class p extends l{_UUID;_projectName;_projectCode;_description;_secondDescription;_moreDescription;_valid;_createdAtFormat;_createdByName;_updatedAtFormat;_updatedByName;constructor(e){super(e),this._UUID=e.UUID??"",this._projectName=e.projectName??"",this._projectCode=e.projectCode??"",this._description=e.description??"",this._secondDescription=e.secondDescription??"",this._moreDescription=e.moreDescription??"",this._valid=e.valid??!0,this._createdAtFormat=e.createdAtFormat??"",this._createdByName=e.createdByName??"",this._updatedAtFormat=e.updatedAtFormat??"",this._updatedByName=e.updatedByName??""}asViewModel(){return new j(this.asDto())}get UUID(){return this._UUID}set UUID(e){this._UUID=e}get projectName(){return this._projectName}set projectName(e){this._projectName=e}get projectCode(){return this._projectCode}set projectCode(e){this._projectCode=e}get description(){return this._description}set description(e){this._description=e}get secondDescription(){return this._secondDescription}set secondDescription(e){this._secondDescription=e}get moreDescription(){return this._moreDescription}set moreDescription(e){this._moreDescription=e}get valid(){return this._valid}set valid(e){this._valid=e}get createdAtFormat(){return this._createdAtFormat}set createdAtFormat(e){this._createdAtFormat=e}get createdByName(){return this._createdByName}set createdByName(e){this._createdByName=e}get updatedAtFormat(){return this._updatedAtFormat}set updatedAtFormat(e){this._updatedAtFormat=e}get updatedByName(){return this._updatedByName}set updatedByName(e){this._updatedByName=e}}const N=()=>{const{request:s}=P();return{indexProject:async r=>{const t=new FormData;return t.append("param[offset]",r.offset),t.append("param[limit]",r.limit),t.append("param[sort]",r.sort),t.append("param[order]",r.order),r.filter!=="{}"&&t.append("param[filter] ",r.filter),await s({url:"/project/index",method:"POST",data:t})},createProject:async r=>{const t=r.asDto(),i=u(t,new FormData),o=(await s({url:"/project/create",method:"POST",data:i})).project;return new p(o)},updateProject:async r=>{const t=r.asDto(),i=u(t,new FormData),o=(await s({url:`/project/update?id=${t.UUID}`,method:"POST",data:i})).project;return new p(o)},removeProject:async r=>{const t=new FormData;return r.forEach(i=>{t.append("UUIDs[]",i)}),await s({url:"/user/remove",method:"POST",data:t})}}},A=()=>{const{indexProject:s,createProject:e,updateProject:d,removeProject:m}=N();return{indexProject:async(a,o)=>n(async()=>{const c=await s(a),_=c.rows.map(h=>new j(h));return{...c,rows:_}},o),createProject:async(a,o)=>{let c=new p(a);return c=await n(async()=>e(c),o),c.asViewModel()},updateProject:async(a,o)=>{let c=new p(a);return c=await n(async()=>d(c),o),c.asViewModel()},removeProject:async(a,o)=>await n(async()=>m(a),o)}};export{A as u};
