import{O as U,j as c,H as y}from"./main-DKkfExXF.js";import{A as b}from"./app-layout-Cybe9DZT.js";import f from"./api-test-layout-DGp0SGkn.js";import{u as g}from"./useQuery-CVd_1AaF.js";import I from"./project-card-B9L-fLu7.js";import{u as x}from"./useRequest-B0SUaPpD.js";import{B as F}from"./BaseEntity-DGhPHkWu.js";import{A as D}from"./ApiTestViewModel-Bfq7sIUP.js";import{h as u}from"./serviceHandler-BlQljMi1.js";import{C as N}from"./useClientDatabaseService-D53QjJ0d.js";import"./button-BTmt6wGY.js";import"./index-C2B2wWGv.js";import"./index-UMazkzlv.js";import"./x-B3HB8OQ5.js";import"./createLucideIcon-DLdpCBe9.js";import"./useAppSelector-BB6KD_6y.js";import"./chevron-right-CFCVJHMf.js";import"./dropdown-menu-B5y-GdSS.js";import"./index-D0mbqntV.js";import"./useAuthState-DbL-t91S.js";import"./index-CFhx9SSW.js";import"./card-CEb3k9Yh.js";import"./use-show-toast-B3i0I1jI.js";const P=["UUID","parentApiTest","clientDatabase","project","testName","transmission","description","isFolder","moreDescription","data","output","scenario"];function l(e,t){return U(e,P,t,"apiTest")}class T extends F{_UUID;_parentApiTest;_clientDatabase;_project;_testName;_isFolder;_transmission;_description;_moreDescription;_data;_output;_scenario;constructor(t){super(t),this._UUID=t.UUID??"",this._parentApiTest=t.parentApiTest??"",this._clientDatabase=t.clientDatabase??"",this._project=t.project??"",this._testName=t.testName??"",this._isFolder=t.isFolder??!1,this._transmission=t.transmission??"",this._description=t.description??"",this._moreDescription=t.moreDescription??"",this._data=t.data??"",this._output=t.output??"",this._scenario=t.scenario??""}asViewModel(){return new D(this.asDto())}get UUID(){return this._UUID}set UUID(t){this._UUID=t}get parentApiTest(){return this._parentApiTest}set parentApiTest(t){this._parentApiTest=t}get clientDatabase(){return this._clientDatabase}set clientDatabase(t){this._clientDatabase=t}get project(){return this._project}set project(t){this._project=t}get testName(){return this._testName}set testName(t){this._testName=t}get transmission(){return this._transmission}set transmission(t){this._transmission=t}get description(){return this._description}set description(t){this._description=t}get moreDescription(){return this._moreDescription}set moreDescription(t){this._moreDescription=t}get data(){return this._data}set data(t){this._data=t}get output(){return this._output}set output(t){this._output=t}get scenario(){return this._scenario}set scenario(t){this._scenario=t}get isFolder(){return this._isFolder}set isFolder(t){this._isFolder=t}}const C=()=>{const{request:e}=x();return{listProjects:async()=>e({url:"/api-test/list-projects",method:"GET"}),indexApiTest:async()=>e({url:"/api-test/index",method:"GET"}),createApiTest:async n=>{const a=n.asDto(),p=l(a,new FormData),s=(await e({url:"/api-test/create",method:"POST",data:p})).apiTest;return new T(s)},updateApiTest:async n=>{const a=n.asDto(),p=l(a,new FormData),s=(await e({url:`/api-test/update?id=${a.UUID}`,method:"POST",data:p})).apiTest;return new T(s)},removeApiTest:async n=>{const a=new FormData;return n.forEach(p=>{a.append("UUIDs[]",p)}),await e({url:"/client-database/remove",method:"POST",data:a})}}};class v{_UUID;_projectCode;_projectName;_clientDatabases;constructor(t,o){this._UUID=t?.UUID??"",this._projectCode=t?.projectCode??"",this._projectName=t?.projectName??"",this._clientDatabases=o}get UUID(){return this._UUID}get projectCode(){return this._projectCode}get projectName(){return this._projectName}get clientDatabases(){return this._clientDatabases}}const O=()=>{const{listProjects:e,indexApiTest:t,createApiTest:o,updateApiTest:m,removeApiTest:_}=C();return{listProjects:async s=>u(async()=>{const i=await e(),r=i.rows.map(d=>{const j=d.clientDatabases.map(w=>new N(w));return new v(d,j)});return{...i,rows:r}},s),indexApiTest:async s=>u(async()=>{const i=await t(),r=i.rows.map(d=>new D(d));return{...i,rows:r}},s),createApiTest:async(s,i)=>{let r=new T(s);return r=await u(async()=>o(r),i),r.asViewModel()},updateApiTest:async(s,i)=>{let r=new T(s);return r=await u(async()=>m(r),i),r.asViewModel()},removeApiTest:async(s,i)=>await u(async()=>_(s),i)}};function it(){const e=[{title:"Backend",href:"/backend"},{title:"API Test Case",href:"/backend/api-test"}],{listProjects:t}=O(),{data:o}=g({queryKey:["/backend/api-test/list-projects"],queryFn:()=>t(),enabled:!0});return c.jsxs(b,{breadcrumbs:e,children:[c.jsx(y,{title:"API Test Case"}),c.jsx(f,{children:c.jsx("div",{className:"w-full h-full grid grid-cols-6 grid-rows-3",children:o?.rows?.map(m=>c.jsx(I,{projectViewModel:m}))})})]})}export{it as default};
