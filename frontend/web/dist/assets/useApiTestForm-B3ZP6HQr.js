import{u as D,a as u}from"./zod-CppQPhVw.js";import{A as F}from"./ApiTestViewModel-BZncyWgE.js";import{c as e,a as y}from"./main-C3T8v2Y3.js";import{o as p,s as r,n as c,b as E}from"./schemas-D95ZC4Tg.js";const o={parentApiTest:e({name:"parentApiTest",label:"Parent Api Test"}),clientDatabase:e({name:"clientDatabase",label:"Client Database"}),project:e({name:"project",label:"Project"}),testName:e({name:"testName",label:"Test Name",max:50}),isFolder:e({name:"isFolder",label:"isFolder"}),transmission:e({name:"transmission",label:"Body"}),description:e({name:"description",label:"Description"}),moreDescription:e({name:"moreDescription",label:"More Description"})},s={enabled:e({name:"enabled",label:"Enabled"}),key:e({name:"key",label:"Key",max:100}),value:e({name:"value",label:"Value"}),description:e({name:"description",label:"Description",max:500}),fieldType:e({name:"fieldType",label:"Field Type",max:100})},f=p({enabled:c().optional(),key:r().max(s.key.max,{error:s.key.maxError}).optional(),value:r().max(s.value.max,{error:s.value.maxError}).optional(),description:r().max(s.description.max,{error:s.description.maxError}).optional()}),A=p({testName:r().max(o.testName.max,{error:o.testName.maxError}),parentApiTest:r().optional(),clientDatabase:r(),project:r(),isFolder:c(),transmission:r(),description:r().max(o.description.max,{error:o.description.maxError}).optional(),moreDescription:r().max(o.moreDescription.max,{error:o.moreDescription.maxError}).optional()}).extend({apiTestData:E(f).default([]).optional()}),w=({apiTestDTO:n})=>{const[a,d]=y.useState(()=>n?new F(n):null),i=D({resolver:u(A),defaultValues:{parentApiTest:a?.parentApiTest??"",clientDatabase:a?.clientDatabase??"",project:a?.project??"",testName:a?.testName??"",isFolder:a?.isFolder??0,transmission:a?.transmission??"",description:a?.description??"",moreDescription:a?.moreDescription??"",apiTestData:a?.apiTestData?.rows??[]}});return{form:i,setFormError:(b,x)=>{const{setToastError:T}=x||{},t=b?.response?.data?.errors??{};typeof t=="string"?T?.(t):t&&Object.keys(t).length>0&&Object.keys(t).forEach(l=>{const m=l.replace(/^apiTest\./,"");m in i.getValues()&&i.setError(m,{type:"server",message:t[l][0]??"Invalid value"})})},apiTestViewModel:a,setApiTestViewModel:d}};export{o as A,s as a,w as u};
