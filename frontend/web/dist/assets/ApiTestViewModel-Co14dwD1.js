class i{_UUID;_apiTest;_key;_value;_description;_enabled;_fieldType;_isNew;constructor(e){this._UUID=e.UUID??"",this._apiTest=e.apiTest??"",this._key=e.key??"",this._value=e.value??"",this._description=e.description??"",this._enabled=e.enabled??1,this._fieldType=this.decodeFieldType(e.fieldType??""),this._isNew=e.isNew??0}get UUID(){return this._UUID}get apiTest(){return this._apiTest}get key(){return this._key}get value(){return this._value}get description(){return this._description}get enabled(){return this._enabled}get fieldType(){return this._fieldType}get isNew(){return this._isNew}get dto(){return{UUID:this._UUID,apiTest:this._apiTest,key:this._key,value:this._value,description:this._description,enabled:this._enabled,fieldType:this.encodeFieldType(this._fieldType),isNew:this._isNew}}decodeFieldType(e){try{const t=atob(e);return JSON.parse(t),t}catch{return e}}encodeFieldType(e){return btoa(e)}}class s{_UUID;_parentApiTest;_clientDatabase;_project;_isFolder;_testName;_transmission;_description;_moreDescription;_apiTestHasDatas;_apiTests;_apiTestDTO;_isNew;constructor(e){this._UUID=e.UUID??"",this._parentApiTest=e.parentApiTest??"",this._clientDatabase=e.clientDatabase??"",this._project=e.project??"",this._testName=e.testName??"",this._transmission=e.transmission??"",this._isFolder=Number(e.isFolder??0),this._description=e.description??"",this._moreDescription=e.moreDescription??"",this._apiTestHasDatas=(e.apiTestHasDatas??[]).map(t=>new i(t)),this._apiTests=(e.apiTests??[]).map(t=>new s(t)),this._apiTestDTO=e,this._isNew=e?.isNew??!1}get UUID(){return this._UUID}get parentApiTest(){return this._parentApiTest}get clientDatabase(){return this._clientDatabase}get project(){return this._project}get testName(){return this._testName}get transmission(){return this._transmission}get description(){return this._description}get moreDescription(){return this._moreDescription}get isFolder(){return this._isFolder}get apiTestHasDatas(){return this._apiTestHasDatas}get apiTests(){return this._apiTests}get apiTestDTO(){return this._apiTestDTO}get isNew(){return this._isNew}}export{s as A,i as a};
